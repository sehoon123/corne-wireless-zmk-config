/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&sk {
    release-after-ms = <500>;
    quick-release;
};

/ {
    combos {
        compatible = "zmk,combos";

        activate_f {
            bindings = <&mo_function>;
            key-positions = <13 14>;
            timeout-ms = <20>;
            layers = <0>;
        };

        alt {
            bindings = <&sticky_behavior LEFT_ALT>;
            key-positions = <37 40>;
            layers = <0>;
            slow-release;
        };
    };

    behaviors {
        z_alt: z_alt {
            compatible = "zmk,behavior-tap-dance";
            label = "Z_ALT";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&kp LEFT_ALT>;
        };

        Number_Layer: Number_Layer {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMBER_LAYER";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 0>;
        };

        mo_function: mo_function {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_FUNCTION";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&to 3>;
        };

        mo_number: mo_number {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_NUMBER";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&to 0>;
        };

        sticky_behavior: sticky_behavior {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_BEHAVIOR";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1500>;
            quick-release;
            ignore-modifiers;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I            &kp O    &kp P     &kp BSPC
&kp LCTRL       &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K            &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA        &kp DOT  &kp FSLH  &kp ESC
                              &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &lt 2 RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&trans  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BACKSPACE
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&trans  &trans        &trans        &kp CAPSLOCK  &trans        &trans          &trans    &trans    &trans    &trans     &trans  &bt BT_CLR
                                    &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp DELETE
&trans  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                          &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        F1_12_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &to 0
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
